{"version":3,"sources":["images/cars/hero.png","images/start.png","images/finish.png","images/cars/retro.png","images/cars/red.png","images/cars/range.png","images/cars/mercedes.png","images/enemy.png","images/pothole.png","track.mp3","components/Score/index.js","components/Progress/index.js","components/Hero/index.js","helpers/index.js","components/Road/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Score","_this$props","this","props","isGameActive","lap","displayScore","tableScore","react_default","a","createElement","className","concat","map","score","idx","key","PureComponent","Progress","src","hero","alt","style","top","start","Array","fill","_","finish","Hero","state","position","I","from","left","move","right","up","down","handleKeyDown","_ref","keyCode","_this","isGameOver","hasCrash","requestAnimationFrame","handleKeyUp","_ref2","_this$props2","changeMultiScore","cancelAnimationFrame","_this$props3","setState","set","_this$props4","container","offsetWidth","_this$props5","hasPot","_this$props6","offsetHeight","getImage","range","mercedes","red","retro","document","addEventListener","removeEventListener","_this$props7","setRef","ref","cx","crashed","getRect","offsetTop","offsetLeft","bottom","getRandomInt","min","max","Math","floor","random","Road","initialEnemiesCoords","initialPotsCoords","carDown","car","speed","carCurrentTop","parseInt","clientHeight","clientWidth","lineDown","line","lineSpeed","lineCurrentTop","potDown","pot","_this2","children","lines","enemies","pots","el","item","enemyCar","pothole","initialState","benefits","multiScore","App","startGame","game","renderGame","Audio","track","play","restartGame","value","_this$state","hasCollision","prev","savedSpeed","setTimeout","calculateScore","forEach","enemy","road","cancelGame","stopGame","objects","some","object","heroRect","enemyRect","_this$state2","ratio","Object","objectSpread","toConsumableArray","reduce","b","_this$state3","Fragment","Progress_Progress","Road_Road","Hero_Hero","visible","onClick","Score_Score","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.099769ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero.78a1c8b6.png\";","module.exports = __webpack_public_path__ + \"static/media/start.ae51d949.png\";","module.exports = __webpack_public_path__ + \"static/media/finish.02137b12.png\";","module.exports = __webpack_public_path__ + \"static/media/retro.1925e39e.png\";","module.exports = __webpack_public_path__ + \"static/media/red.784f2095.png\";","module.exports = __webpack_public_path__ + \"static/media/range.c8a4c999.png\";","module.exports = __webpack_public_path__ + \"static/media/mercedes.672119b2.png\";","module.exports = __webpack_public_path__ + \"static/media/enemy.171cec71.png\";","module.exports = __webpack_public_path__ + \"static/media/pothole.559719db.png\";","module.exports = __webpack_public_path__ + \"static/media/track.423bb034.mp3\";","import React, { PureComponent } from 'react'\nimport './styles.css'\n\n/**\n * Component for displaying score, table score for each lap\n */\nexport default class Score extends PureComponent {\n  render () {\n    const { isGameActive, lap, displayScore, tableScore } = this.props\n    return (\n      <div className='wrap-score'>\n        <p className='score'>Score: {displayScore}</p>\n        <p className='lap'>{isGameActive ? `Lap: ${lap}` : 'Start the game'}</p>\n        <table>\n          <tbody>\n            {tableScore.map((score, idx) => (\n              <tr key={idx}><td>Lap {idx + 1}</td><td>{score}</td></tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport './styles.css'\nimport hero from '../../images/cars/hero.png'\nimport start from '../../images/start.png'\nimport finish from '../../images/finish.png'\n\n/**\n * Component display road map on left side\n */\nexport default class Progress extends PureComponent {\n  render () {\n    const { score } = this.props\n    return (\n      <div className='progress-root'>\n        <img src={hero} className='progress-hero' alt='hero' style={{ top: `${100 - score / 50}%` }} />\n        <img src={start} alt='start' className='progress-edge start' />\n        {Array(6).fill(0).map((_, idx) => <div key={idx} className='progress-point' />)}\n        <img src={finish} alt='finish' className='progress-edge finish' />\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport I from 'seamless-immutable'\nimport cx from 'classnames'\nimport './styles.css'\nimport hero from '../../images/cars/hero.png'\nimport retro from '../../images/cars/retro.png'\nimport red from '../../images/cars/red.png'\nimport range from '../../images/cars/range.png'\nimport mercedes from '../../images/cars/mercedes.png'\n\n/**\n * Component Hero, render, manage hero\n */\nexport default class Hero extends PureComponent {\n  state = {\n    // initial position\n    position: I.from({\n      left: 10,\n      top: 300\n    })\n  }\n\n  /**\n   * current ways\n   * @type {{left: null, right: null, up: null, down: null}}\n   */\n  move = {\n    left: null,\n    right: null,\n    up: null,\n    down: null\n  }\n\n  componentDidMount () {\n    // add listeners on keyboard\n    document.addEventListener('keydown', this.handleKeyDown)\n    document.addEventListener('keyup', this.handleKeyUp)\n  }\n\n  componentWillUnmount () {\n    // remove listeners on keyboard\n    document.removeEventListener('keydown')\n    document.removeEventListener('keyup')\n  }\n\n  /**\n   * handle key down event\n   * @param keyCode\n   * @returns {number}\n   */\n  handleKeyDown = ({ keyCode }) => {\n    const { isGameOver, hasCrash } = this.props\n    if (!isGameOver && !hasCrash) {\n      if (keyCode === 37 && !this.move.left) return this.move.left = requestAnimationFrame(this.left)\n      if (keyCode === 39 && !this.move.right) return this.move.right = requestAnimationFrame(this.right)\n      if (keyCode === 38 && !this.move.up) return this.move.up = requestAnimationFrame(this.up)\n      if (keyCode === 40 && !this.move.down) return this.move.down = requestAnimationFrame(this.down)\n    }\n  }\n\n  /**\n   * handle key up event\n   * @param keyCode\n   * @returns {null}\n   */\n  handleKeyUp = ({ keyCode }) => {\n    const { isGameOver, changeMultiScore } = this.props\n    if (!isGameOver) {\n      switch (keyCode) {\n        case 37:\n          cancelAnimationFrame(this.move.left)\n          this.move.left = null\n          break\n        case 39:\n          cancelAnimationFrame(this.move.right)\n          this.move.right = null\n          break\n        case 38:\n          cancelAnimationFrame(this.move.up)\n          this.move.up = null\n          changeMultiScore(false)\n          break\n        case 40:\n          cancelAnimationFrame(this.move.down)\n          this.move.down = null\n          break\n        default:\n          return null\n      }\n    }\n  }\n\n  /**\n   * move hero left\n   */\n  left = () => {\n    const { position } = this.state\n    const { isGameOver, hasCrash } = this.props\n    if (!isGameOver && !hasCrash && position.left > 0) {\n      this.setState({ position: position.set('left', position.left - 5) })\n      this.move.left = requestAnimationFrame(this.left)\n    }\n  }\n\n  /**\n   * move hero right\n   */\n  right = () => {\n    const { position } = this.state\n    const { isGameOver, hasCrash, container } = this.props\n    if (!isGameOver && !hasCrash && position.left < container.offsetWidth - 40) {\n      this.setState({ position: position.set('left', position.left + 5) })\n      this.move.right = requestAnimationFrame(this.right)\n    }\n  }\n\n  /**\n   * move hero up\n   */\n  up = () => {\n    const { position } = this.state\n    const { isGameOver, hasCrash, hasPot, changeMultiScore } = this.props\n    if (!isGameOver && !hasCrash && !hasPot && position.top > 0) {\n      this.setState({ position: position.set('top', position.top - 3) })\n      this.move.up = requestAnimationFrame(this.up)\n      changeMultiScore(true)\n    }\n  }\n\n  /**\n   * move hero down\n   */\n  down = () => {\n    const { position } = this.state\n    const { isGameOver, hasCrash, container } = this.props\n    if (!isGameOver && !hasCrash && position.top < container.offsetHeight - 70) {\n      this.setState({ position: position.set('top', position.top + 3) })\n      this.move.down = requestAnimationFrame(this.down)\n    }\n  }\n\n  /**\n   * get hero image, depends on lap\n   */\n  getImage = () => {\n    const { lap } = this.props\n    switch (lap) {\n      case 1: return hero\n      case 2: return range\n      case 3: return mercedes\n      case 4: return red\n      case 5: return retro\n      default: return hero\n    }\n  }\n\n  render () {\n    const { setRef, hasCrash } = this.props\n    return (\n      <img\n        src={this.getImage()}\n        ref={setRef}\n        style={this.state.position}\n        className={cx('car', { crashed: hasCrash })}\n        alt='hero'\n      />\n    )\n  }\n}\n","/**\n * returns object with coordinates of element\n * @param offsetTop: Number\n * @param offsetLeft: Number\n * @param offsetWidth: Number\n * @param offsetHeight: Number\n * @returns {{top: Number, left: Number, right: Number, bottom: Number}}\n */\nexport function getRect ({ offsetTop, offsetLeft, offsetWidth, offsetHeight }) {\n  return {\n    top: offsetTop,\n    left: offsetLeft,\n    right: offsetWidth + offsetLeft,\n    bottom: offsetHeight + offsetTop\n  }\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive)\n * Using Math.round() will give you a non-uniform distribution!\n */\nexport function getRandomInt (min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n","import React, { PureComponent } from 'react'\nimport { getRandomInt } from '../../helpers'\nimport enemyCar from '../../images/enemy.png'\nimport pothole from '../../images/pothole.png'\nimport './styles.css'\n\n/**\n * Road component, render road, and animate objects on road\n */\nexport default class Road extends PureComponent {\n  /**\n   * initial coordinates for enemies\n   * @type {*[]}\n   */\n  initialEnemiesCoords = [\n    { top: getRandomInt(-50, -150), left: `${getRandomInt(0, 80)}%` },\n    { top: getRandomInt(-225, -300), left: `${getRandomInt(0, 80)}%` },\n    { top: getRandomInt(-400, -500), left: `${getRandomInt(0, 80)}%` }\n  ]\n\n  /**\n   * initial coordinates for pots\n   * @type {*[]}\n   */\n  initialPotsCoords = [\n    { top: getRandomInt(-50, -100), left: `${getRandomInt(0, 80)}%` },\n    { top: getRandomInt(-300, -400), left: `${getRandomInt(0, 80)}%` },\n    { top: getRandomInt(-500, -600), left: `${getRandomInt(0, 80)}%` },\n    { top: getRandomInt(-650, -700), left: `${getRandomInt(0, 80)}%` }\n  ]\n\n  /**\n   * move car down\n   * @param car\n   */\n  carDown = (car) => {\n    const { speed } = this.props\n    let carCurrentTop = parseInt(car.style.top)\n    if (carCurrentTop > this.container.clientHeight) {\n      carCurrentTop = -200\n      car.style.left = `${Math.random() * (this.container.clientWidth - car.clientWidth)}px`\n    }\n    car.style.top = `${carCurrentTop + speed}px`\n  }\n\n  /**\n   * move road line dow\n   * @param line\n   */\n  lineDown = (line) => {\n    const { lineSpeed } = this.props\n    let lineCurrentTop = parseInt(line.style.top)\n    if (lineCurrentTop > this.container.clientHeight) {\n      lineCurrentTop = -300\n    }\n    line.style.top = `${lineCurrentTop + lineSpeed}px`\n  }\n\n  /**\n   * move road pot dow\n   * @param pot\n   */\n  potDown = (pot) => {\n    const { lineSpeed } = this.props\n    let lineCurrentTop = parseInt(pot.style.top)\n    if (lineCurrentTop > this.container.clientHeight) {\n      lineCurrentTop = -300\n      pot.style.left = `${Math.random() * (this.container.clientWidth - pot.clientWidth)}px`\n    }\n    pot.style.top = `${lineCurrentTop + lineSpeed}px`\n  }\n\n  render () {\n    const { children, lines, enemies, pots } = this.props\n    return (\n      <div>\n        <div className='help'>\n          <p>Controls: Right, Left, Up & Down arrow keys.</p>\n        </div>\n        <div className='road' ref={el => { this.container = el }}>\n          {[-150, 150, 450].map((item, idx) => (\n            <div key={idx} ref={el => { lines[idx] = el }} className='line' style={{ top: item }} />\n          ))}\n          {children(this.container)}\n          {this.initialEnemiesCoords.map(({ top, left }, idx) => (\n            <img\n              src={enemyCar}\n              key={idx}\n              className='car'\n              ref={el => { enemies[idx] = el }}\n              style={{ top, left }}\n              alt='enemy'\n            />\n          ))}\n          {this.initialPotsCoords.map(({ top, left }, idx) => (\n            <img\n              key={idx}\n              src={pothole}\n              alt='pot'\n              ref={el => { pots[idx] = el }}\n              className='pot'\n              style={{ top, left }}\n            />\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './styles.css'\nimport cx from 'classnames'\nimport Score from './components/Score'\nimport Progress from './components/Progress'\nimport Hero from './components/Hero'\nimport { getRect } from './helpers'\nimport Road from './components/Road'\nimport track from './track.mp3'\n\nconst initialState = {\n  isGameOver: false,\n  isGameActive: false,\n  score: 1,\n  tableScore: [],\n  displayScore: 0,\n  speed: 2,\n  lineSpeed: 5,\n  benefits: [0, 0],\n  lap: 1,\n  multiScore: false,\n  hasPot: false,\n  hasCrash: false\n}\n\n/**\n * Main class with game logic\n */\nclass App extends Component {\n  state = initialState\n\n  /**\n   * array of enemies cars\n   * @type {Array}\n   */\n  enemies = []\n\n  /**\n   * array of lines on road, need to animate\n   * @type {Array}\n   */\n  lines = []\n\n  /**\n   * array of pots\n   * @type {Array}\n   */\n  pots = []\n\n  /**\n   * start the game process, play music\n   */\n  startGame = () => {\n    this.setState({ isGameActive: true })\n    this.game = requestAnimationFrame(this.renderGame)\n    const audio = new Audio(track)\n    audio.play()\n  }\n\n  /**\n   * restart game\n   */\n  restartGame = () => {\n    this.setState(initialState, this.startGame)\n  }\n\n  /**\n   * change multiple score, depends on hero move\n   * @param value: (true, false)\n   */\n  changeMultiScore = (value) => this.setState({ multiScore: value })\n\n  /**\n   * game tick, calculate all changes and render\n   */\n  renderGame = () => {\n    const { hasPot, hasCrash } = this.state\n\n    // plane next frame\n    this.game = requestAnimationFrame(this.renderGame)\n\n    // check collision with enemies and stop the car\n    if (this.hasCollision(this.hero, this.enemies) && !hasCrash) {\n      this.setState(prev => ({\n        hasCrash: true,\n        speed: -2,\n        lineSpeed: 0,\n        savedSpeed: { speed: prev.speed, lineSpeed: prev.lineSpeed }\n      }))\n      // return previous speed for car\n      setTimeout(() => (\n        this.setState(({ savedSpeed, benefits }) => ({\n          hasCrash: false,\n          hasPot: false,\n          speed: savedSpeed.speed + benefits[0],\n          lineSpeed: savedSpeed.lineSpeed + benefits[1],\n          benefits: [0, 0]\n        }))\n      ), 2000)\n    }\n\n    // check collision with pots and slow down the car\n    if (this.hasCollision(this.hero, this.pots) && !hasPot) {\n      this.setState(prev => ({ hasPot: true, speed: prev.speed - 6, lineSpeed: prev.lineSpeed - 3 }))\n      // return previous speed for car\n      setTimeout(() => {\n        this.setState(prev => {\n          if (prev.hasCrash) return { benefits: [prev.benefits[0] + 6, prev.benefits[1] + 3] }\n          return { hasPot: false, speed: prev.speed + 6, lineSpeed: prev.lineSpeed + 3 }\n        })\n      }, 1000)\n    }\n\n    this.calculateScore()\n\n    // if it is 5 lap pass, end the game\n    if (this.state.lap === 6) {\n      this.cancelGame()\n      return\n    }\n\n    // run animations on road\n    this.enemies.forEach(enemy => this.road.carDown(enemy))\n    this.lines.forEach(line => this.road.lineDown(line))\n    this.pots.forEach(pot => this.road.potDown(pot))\n  }\n\n  /**\n   * cancel the game\n   */\n  cancelGame = () => {\n    this.setState({ isGameOver: true, isGameActive: false })\n    cancelAnimationFrame(this.game)\n  }\n\n  /**\n   * make a pause\n   */\n  stopGame = () => {\n    this.setState({ isGameActive: false })\n    cancelAnimationFrame(this.game)\n  }\n\n  /**\n   * check collision with objects\n   * @param hero\n   * @param objects\n   * @returns {boolean}\n   */\n  hasCollision = (hero, objects) => {\n    return objects.some(object => {\n      const heroRect = getRect(hero)\n      const enemyRect = getRect(object)\n      return !(\n        heroRect.bottom < enemyRect.top ||\n        heroRect.top > enemyRect.bottom ||\n        heroRect.right < enemyRect.left ||\n        heroRect.left > enemyRect.right\n      )\n    })\n  }\n\n  /**\n   * calculate score, table score\n   */\n  calculateScore = () => {\n    const { score, multiScore, hasPot, hasCrash } = this.state\n    this.setState(prev => ({ score: prev.score + 1 }))\n    // calculate display score\n    if (!(score % 20)) {\n      let ratio = multiScore ? 2 : 1\n      ratio = hasPot ? ratio * 0.25 : ratio\n      ratio = hasCrash ? 0 : ratio\n      this.setState(prev => ({ displayScore: prev.displayScore + ratio }))\n    }\n\n    // add new lap, speed, table score\n    if (!(score % 1000)) {\n      this.setState(prev => {\n        const benefits = prev.hasCrash\n          ? { benefits: [prev.benefits[0] + 1, prev.benefits[1] + 1] }\n          : { speed: prev.speed + 1, lineSpeed: prev.lineSpeed + 1 }\n        return {\n          ...benefits,\n          lap: prev.lap + 1,\n          tableScore: [\n            ...prev.tableScore,\n            prev.displayScore - prev.tableScore.reduce((a, b) => a + b, 0)\n          ]\n        }\n      })\n    }\n  }\n\n  render () {\n    const {\n      isGameOver, displayScore, lap, score, hasCrash, hasPot, tableScore, isGameActive, speed, lineSpeed\n    } = this.state\n    return (\n      <>\n        <main className='main'>\n          <Progress score={score} />\n          <div className='wrap-road'>\n            <Road\n              speed={speed}\n              lineSpeed={lineSpeed}\n              lines={this.lines}\n              enemies={this.enemies}\n              pots={this.pots}\n              ref={el => { this.road = el }}\n            >\n              {container => (\n                <>\n                  <Hero\n                    setRef={el => { this.hero = el }}\n                    isGameOver={isGameOver}\n                    container={container}\n                    changeMultiScore={this.changeMultiScore}\n                    hasCrash={hasCrash}\n                    hasPot={hasPot}\n                    lap={lap}\n                  />\n                  <div className={cx('wrap-restart', { visible: isGameOver || !isGameActive })}>\n                    <button className='restart' onClick={displayScore ? this.restartGame : this.startGame}>\n                      {!displayScore ? 'Start' : 'Restart'}\n                    </button>\n                  </div>\n                </>\n              )}\n            </Road>\n            <button\n              className={cx('action-game', { visible: displayScore && !isGameOver })}\n              onClick={isGameActive ? this.stopGame : this.startGame}\n            >\n              {isGameActive ? 'Stop' : 'Resume'}\n            </button>\n          </div>\n          <Score isGameActive={isGameActive} lap={lap} displayScore={displayScore} tableScore={tableScore} />\n        </main>\n      </>\n    )\n  }\n}\n\nexport default App\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}